<Window x:Class="HunterPie.UI.Overlay.Components.WidgetBase"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="using:HunterPie.UI.Overlay.Components"
        xmlns:overlay="using:HunterPie.UI.Overlay"
        xmlns:client="clr-namespace:HunterPie.Core.Client;assembly=HunterPie.Core"
        xmlns:DEBUG="DEBUG_MODE"
        xmlns:enums="using:HunterPie.UI.Overlay.Enums"
        mc:Ignorable="d"
        x:DataType="local:WidgetBase"
        Title="{Binding Widget.Title, Mode=OneWay}"
        SystemDecorations="None"
        Background="#01000000"
        Topmost="True"
        SizeToContent="WidthAndHeight"
        d:Height="400"
        d:Width="500"
        PositionChanged="WindowBase_OnPositionChanged"
        Opacity="{Binding Widget.Settings.Opacity.Current, Mode=OneWay}"
        UseLayoutRounding="False"
        Loaded="OnLoaded"
        ShowInTaskbar="False"
        CanResize="False"
        TransparencyBackgroundFallback="{x:Null}"
        IsVisible="{Binding Overlay.IsEnabled.Value, Source={x:Static client:ClientConfig.Config}}"
        Classes.gameHudOpen="{Binding IsGameHudOpen, Source={x:Static overlay:WidgetManager.Instance}}"
        Classes.hideWhenUIOpen="{Binding Widget.Settings.HideWhenUiOpen.Value}"
        Classes.hideWhenUnfocus="{Binding Settings.HideWhenUnfocus, Source={x:Static overlay:WidgetManager.Instance}}"
        Classes.isGameFocused="{Binding IsGameFocused, Source={x:Static overlay:WidgetManager.Instance}}"
        Classes.isDesignModeEnabled="{Binding IsDesignModeEnabled, Source={x:Static overlay:WidgetManager.Instance}}"
        Classes.overlayEnabled="{Binding Overlay.IsEnabled.Value, Source={x:Static client:ClientConfig.Config}}"
        PointerWheelChanged="InputElement_OnPointerWheelChanged">
    <Panel>
        <Grid x:Name="PART_Base"
              IsVisible="{Binding IsDesignModeEnabled, Source={x:Static overlay:WidgetManager.Instance}}"
              d:Opacity="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            
            <Border Grid.Row="1"
                    x:Name="PART_Highlight"
                    BorderThickness="1,0,1,1"
                    Background="{StaticResource HUNTERPIE_HIGHLIGHT_BACKGROUND}"
                    BorderBrush="{StaticResource HUNTERPIE_HIGHLIGHT_BORDER}"
                    CornerRadius="0,0,5,5"/>
            
            <local:WidgetHeader Grid.Row="0" 
                                Height="30"
                                VerticalAlignment="Top"/>
        </Grid>

        <!-- Widget content -->
        <Panel Margin="10,30,10,10">
            <ContentControl x:DataType="local:WidgetBase" 
                            Content="{Binding Widget}"
                            Opacity="{Binding Widget.Settings.Opacity.Current, Mode=OneWay}"
            >
                <ContentControl.Styles>
                    <Style Selector="ContentControl">
                        <Setter Property="IsVisible" Value="{Binding Widget.Settings.Enabled.Value}"/>
                        
                        <!-- <Style Selector="^.hideWhenUIOpen.isGameHudOpen"> -->
                        <!--     <Setter Property="IsVisible" Value="False"/> -->
                        <!-- </Style> -->
                        <!-- <Style Selector="^.hideWhenUnfocus:not(.isGameFocused)"> -->
                        <!--     <Setter Property="IsVisible" Value="False"/> -->
                        <!-- </Style> -->
                        <!-- <Style Selector="^.isDesignModeEnabled"> -->
                        <!--     <Setter Property="IsVisible" Value="True"/> -->
                        <!-- </Style> -->
                        <!-- <Style Selector="^:not(.overlayEnabled)"> -->
                        <!--     <Setter Property="IsVisible" Value="False"/> -->
                        <!-- </Style> -->
                    </Style>
                </ContentControl.Styles>
                <ContentControl.RenderTransform>
                    <ScaleTransform ScaleX="{Binding Widget.Settings.Scale.Current, Mode=OneWay}"
                                    ScaleY="{Binding Widget.Settings.Scale.Current, Mode=OneWay}" />
                </ContentControl.RenderTransform>
            </ContentControl>
        </Panel>
    </Panel>
</Window>
